AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  pEnvironmentName:
    Type: String
    Description: Nome dell'ambiente
    Default: valerio-env
  

Resources:
    Cluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: !Ref pEnvironmentName

    Service:
        Type: AWS::ECS::Service
        Properties:
            Cluster: !Ref Cluster
            LaunchType: FARGATE
            DesiredCount: 2
            DeploymentConfiguration:
                MaximumPercent: 150
                MinimumHealthyPercent: 100
            TaskDefinition: !Ref TaskDefinition
            NetworkConfiguration:
                AwsvpcConfiguration:
                    Subnets:
                      - Fn::ImportValue: valerio-privatesubnet1
                      - Fn::ImportValue: valerio-privatesubnet2
                      - Fn::ImportValue: valerio-publicsubnet1
                      - Fn::ImportValue: valerio-publicsubnet2
                    AssignPublicIp: ENABLED
                    SecurityGroups:
                        - Fn::ImportValue: valerio-securitygroup
            LoadBalancers:
                - ContainerName: !Ref pEnvironmentName
                  ContainerPort: 3000
                  TargetGroupArn: !ImportValue valerio-fargatetargetgroup

    TaskExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Principal:
                      Service:
                      - ecs-tasks.amazonaws.com
                  Action:
                  - sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            TaskRoleArn: !GetAtt TaskExecutionRole.Arn
            ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
            Cpu: 256
            Memory: 512
            Family: !Ref pEnvironmentName
            NetworkMode: awsvpc
            RequiresCompatibilities:
                - FARGATE
            ContainerDefinitions:
                - Name: !Ref pEnvironmentName
                  Environment:
                      - Name : S3_BUCKET
                        Value: "valerio-bucket-s3"
                      - Name: RDS_USERNAME
                        Value: "admin"
                      - Name: RDS_PASSWORD
                        Value: "password"
                      - Name: RDS_HOSTNAME
                        Value: "127.0.0.1"
                      - Name: RDS_PORT
                        Value: "3306"
                      - Name: RDS_DATABASE
                        Value: "node"
                  PortMappings:
                      - ContainerPort: 3000
                  Image: docker.io/laser/helloworld-http:latest
                  LogConfiguration:
                      LogDriver: awslogs
                      Options:
                          awslogs-group: !Ref pEnvironmentName
                          awslogs-region: !Ref AWS::Region
                          awslogs-stream-prefix: ecs

    LogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Ref pEnvironmentName
            RetentionInDays: 365

                    
    MyListenerRule80:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        ListenerArn: !ImportValue valerio-alblistener80
        Priority: 1
        Conditions:
          - Field: path-pattern
            Values:
              - "*"
        Actions:
          - TargetGroupArn: !ImportValue valerio-fargatetargetgroup
            Type: forward
    
    MyListenerRule443:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        ListenerArn: !ImportValue valerio-alblistener443
        Priority: 1
        Conditions:
          - Field: path-pattern
            Values:
              - "*"
        Actions:
          - TargetGroupArn: !ImportValue valerio-fargatetargetgroup
            Type: forward
    
    MyListenerRule3000:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        ListenerArn: !ImportValue valerio-alblistener3000
        Priority: 1
        Conditions:
          - Field: path-pattern
            Values:
              - "*"
        Actions:
          - TargetGroupArn: !ImportValue valerio-fargatetargetgroup
            Type: forward


Outputs:
  Cluster:
    Description: cluster
    Value: !Ref Cluster
    Export:
      Name: valerio-cluster
        
  Service:
    Description: service
    Value: !Ref Service
    Export:
      Name: valerio-service

  TaskDefinition:
    Description: taskdefinition
    Value: !Ref TaskDefinition
    Export:
      Name: valerio-taskdefinition
  
  TaskExecutionRole:
    Description: taskexecutionrole
    Value: !Ref TaskExecutionRole
    Export:
      Name: valerio-taskexecutionrole

  LogGroup:
    Description: loggroup
    Value: !Ref LogGroup
    Export:
      Name: valerio-loggroup

  MyListenerRule80:
    Description: listener rule 80
    Value: !Ref MyListenerRule80
    Export:
      Name: valerio-listenerrule80

  MyListenerRule443:  
    Description: listener rule 443
    Value: !Ref MyListenerRule443
    Export:
      Name: valerio-listenerrule443

  MyListenerRule3000:
    Description: listener rule 3000
    Value: !Ref MyListenerRule3000
    Export:
      Name: valerio-listenerrule3000
      