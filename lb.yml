AWSTemplateFormatVersion: '2010-09-09'
Description: RDS MySQL, Target Group, ALB, S3 Bucket e Bastion Host
  
Parameters:
  pKeyName:
    # Type: AWS::EC2::KeyPair::KeyName
    Type: String
    Description: Nome della chiave per accedere al bastion host
    Default:
      thinkpad

  pAmiId:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  # WaitConditionHandle:
  #   Type: "AWS::CloudFormation::WaitConditionHandle"

  # WaitCondition:
  #   Type: "AWS::CloudFormation::WaitCondition"
  #   DependsOn:
  #     -
  #   Properties:
  #     Handle: !Ref ValerioWaitConditionHandle
  #     Timeout: '3600'

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS MySQL
      SubnetIds:
        - Fn::ImportValue: "valerio-privatesubnet1"
        - Fn::ImportValue: "valerio-privatesubnet2"

  RDS:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "20"
      DBInstanceClass: db.t3.small
      Engine: MySQL
      MasterUsername: admin
      MasterUserPassword: password
      VPCSecurityGroups:
        - Fn::ImportValue: "valerio-securitygroup"
      DBSubnetGroupName: !Ref DBSubnetGroup

  FargateTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Protocol: HTTP
      Port: 80
      VpcId:
        Fn::ImportValue: "valerio-vpc"
      TargetType: ip

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::ImportValue: "valerio-securitygroup"
      Subnets:
        - Fn::ImportValue: "valerio-publicsubnet1"
        - Fn::ImportValue: "valerio-publicsubnet2"

  AlbListener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FargateTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: valerio.sandbox.soluzionifutura.it
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: sandbox.soluzionifutura.it
          HostedZoneId: Z05711693JWUSZY3QSZ10

  AlbListener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FargateTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref SSLCertificate

  AlbListener3000:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FargateTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 3000
      Protocol: HTTP

  S3Bucket:
    Type: AWS::S3::Bucket

  BastionHost:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref pAmiId 
      InstanceType: t3.micro
      # KeyName: thinkpad
      KeyName: !Ref pKeyName
      Monitoring: true
      SourceDestCheck: false
      # UserData: "sudo yum install iptables-services -y; echo 1 > /proc/sys/net/ipv4/ip_forward; iptables -t nat -A POSTROUTING -j MASQUERADE; iptables-save > /etc/sysconfig/iptables; systemctl enable iptables; systemctl start iptables"
      SubnetId:
        Fn::ImportValue: "valerio-publicsubnet1"
      SecurityGroupIds:
        - Fn::ImportValue: "valerio-securitygroup"

  # BastionEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     InstanceId: !Ref BastionHost

Outputs:
  LoadBalancerDns:
    Description: Load balancer
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: valerio-loadbalancer
  RDSInstance:
    Description: RDS MySQL instance
    Value: !Ref RDS
    Export:
      Name: valerio-rds
  S3Bucket:
    Description: S3 Bucket
    Value: !Ref S3Bucket
    Export:
      Name: valerio-s3bucket
  BastionHost:
    Description: Bastion Host
    Value: !Ref BastionHost
    Export:
      Name: valerio-bastionhost
  FargateTargetGroup:
    Description: Fargate Target Group
    Value: !Ref FargateTargetGroup
    Export:
      Name: valerio-fargatetargetgroup
  ApplicationLoadBalancer:
    Description: Application Load Balancer
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: valerio-applicationloadbalancer
  SSLCertificate:
    Description: SSL Certificate
    Value: !Ref SSLCertificate
    Export:
      Name: valerio-sslcertificate
  AlbListener80:
    Description: Alb Listener 80
    Value: !Ref AlbListener80
    Export:
      Name: valerio-alblistener80
  AlbListener443:
    Description: Alb Listener 443
    Value: !Ref AlbListener443
    Export:
      Name: valerio-alblistener443
  AlbListener3000:
    Description: Alb Listener 3000
    Value: !Ref AlbListener3000
    Export:
      Name: valerio-alblistener3000